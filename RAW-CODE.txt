Here's the clean code, without my comments in spanish/english
I think I'll be keeping some for "functional purposes", but the .ino file already has them so I dunno
[PL - To be done]

#include <DFRobotDFPlayerMini.h>
#include <SoftwareSerial.h>

SoftwareSerial softSerial(10,11);
DFRobotDFPlayerMini reproductor;

#include <TM1637Display.h>

#define CLK 3
#define DIO 4

TM1637Display display(CLK, DIO);

const int ProxSensor = 2;

#include <Wire.h>
#include <LiquidCrystal_I2C.h>

LiquidCrystal_I2C lcd(0x27,16,2);

void setup() {
  softSerial.begin(9600);
  Serial.begin(9600);
  
  reproductor.begin(softSerial);
  reproductor.volume(10);
  pinMode(7, INPUT_PULLUP);
  pinMode(13, OUTPUT);
  Wire.begin();
   lcd.begin(16,2);
    lcd.backlight();
  
    lcd.clear();
    lcd.setCursor(0,0);
    lcd.print("MP3 Viperidae");
    delay(500);
  pinMode(ProxSensor, INPUT);
  display.setBrightness(1);
  display.clear();
    reproductor.start();
   reproductor.enableLoopAll();
  lcd.clear();
}

const uint8_t pausa[] = {SEG_C | SEG_B, SEG_F | SEG_E};

const uint8_t play[] = {
SEG_A | SEG_B | SEG_F | SEG_G | SEG_E , //P
SEG_D | SEG_F | SEG_E, //L
SEG_A | SEG_B | SEG_C | SEG_E | SEG_F | SEG_G, //A
SEG_B | SEG_C | SEG_F | SEG_G | SEG_D }; //Y

const uint8_t next[] = {
SEG_C | SEG_G | SEG_E , //n
SEG_A | SEG_D | SEG_E | SEG_F | SEG_G, //e
SEG_E | SEG_F | SEG_G , //X
SEG_D | SEG_E | SEG_F | SEG_G }; //t

const uint8_t back[] = {
SEG_D | SEG_E | SEG_F | SEG_G | SEG_C , //b
SEG_A | SEG_B | SEG_C | SEG_E | SEG_F | SEG_G, //A
SEG_E | SEG_D | SEG_G , //c
SEG_B | SEG_D | SEG_E | SEG_F | SEG_G }; //K

const uint8_t lop[] = {
SEG_D | SEG_E | SEG_F , //L
SEG_D | SEG_E | SEG_G | SEG_C , //O
SEG_D | SEG_E | SEG_G | SEG_C , //O
SEG_B | SEG_A | SEG_E | SEG_F | SEG_G }; //p

const uint8_t volu[] = {
SEG_B | SEG_D | SEG_F | SEG_C | SEG_E , //V
SEG_D | SEG_E | SEG_G | SEG_C , //o
SEG_F | SEG_E, //l
SEG_E | SEG_C | SEG_D }; //U

const uint8_t vold[] = {
SEG_B | SEG_D | SEG_F | SEG_C | SEG_E , //V
SEG_D | SEG_E | SEG_G | SEG_C , //o
SEG_F | SEG_E, //l
SEG_B | SEG_C | SEG_E | SEG_D | SEG_G }; //d

const uint8_t boom[] = {
SEG_D | SEG_E | SEG_F | SEG_G | SEG_C , //b
SEG_D | SEG_E | SEG_G | SEG_C , //o
SEG_D | SEG_E | SEG_G | SEG_C , //o
SEG_G | SEG_C | SEG_E }; //d

int sitio = 55; //Valor basura
unsigned long tiempoInicioCancion = 0;
bool subibaja = false;
String playlist[] ={"My True Self","Specialist","Dance!","Mass Destruction","Light the FireUp","Whims of Fate",
"Maze of Life","Want to Be Close","Chachacha","PXNDX","Snow Queen","All I Want"};

void loop() {
    display.setSegments(play,4,0);
    if(sitio != (reproductor.readCurrentFileNumber()-1)){
      lcd.clear();
      ELECEDE();
        reiniciarTiempo();
      sitio = (reproductor.readCurrentFileNumber()-1);
    }
    clearLine(1);
    ANIM(1);
    delay(350);
  if (digitalRead(ProxSensor) == LOW)
  {
    display.setSegments(lop,4,0);
    delay(1000);
        if (digitalRead(ProxSensor) == HIGH)  
      {
        reproductor.next();
        reproductor.previous();
        reproductor.enableLoopAll();
        ANIM(2);
        reiniciarTiempo(); 

      } else if (digitalRead(ProxSensor) == LOW)
      {
        display.setSegments(next,4,0);
        delay(1000);
            if (digitalRead(ProxSensor) == HIGH)  
          {
            reproductor.next();
            reproductor.enableLoopAll();
            ANIM(3);
        
          } else if (digitalRead(ProxSensor) == LOW)
          {
            display.setSegments(back,4,0);
            delay(1000);
             if (digitalRead(ProxSensor) == HIGH)  
          {
            reproductor.previous();
            reproductor.enableLoopAll();
            ANIM(4);
        
              } else if (digitalRead(ProxSensor) == LOW)
              {
                display.clear();
                display.setSegments(pausa,2,1);
                delay(200);
                do{
                  reproductor.pause();  
                  ANIM(5);

                }while(digitalRead(ProxSensor) == LOW);
                reproductor.start();
              }
    
          }
    
      }
  }

  if((digitalRead(7)) == LOW){
    digitalWrite(13, HIGH);
    delay(600);
    if((digitalRead(7)) == HIGH){

      if(subibaja == false){
        display.setSegments(volu,4,0);
            ANIM(6);
        delay(1000);
        reproductor.volume(30); //Poner luego en 30
        subibaja = true;
      }
      else{
        display.setSegments(vold,4,0);
            ANIM(7);
        delay(1000);
        reproductor.volume(20);
        subibaja = false;
      }

    }
    else{
      display.setSegments(boom,4,0);
      reproductor.advertise(1);
            ANIM(8);
        delay(1000);
    }
    digitalWrite(13, LOW);
  }
  delay(100);
}

void ELECEDE(){
    lcd.setCursor(0,0);
    String aux = playlist[reproductor.readCurrentFileNumber()-1];
    lcd.print(aux);
}
void ANIM(int tipo){
  switch(tipo){
    case 1:
    lcd.setCursor(0,1);

      unsigned long tiempoTranscurrido = millis() - tiempoInicioCancion;
      
      unsigned long minutos = (tiempoTranscurrido / 60000);
      unsigned long segundos = (tiempoTranscurrido % 60000) / 1000;

      String tiempoFormateado = String(minutos) + ":" + (segundos < 10 ? "0" : "") + String(segundos);

    lcd.print(tiempoFormateado);
    break;
    case 2:
    lcd.setCursor(7,1);
    lcd.print("|");
    delay(150);
    lcd.setCursor(7,1);
    lcd.print("/");
    delay(150);
    lcd.setCursor(7,1);
    lcd.print("-");
    delay(150);
    lcd.setCursor(7,1);
    lcd.print("\\");
    delay(150);
    lcd.setCursor(7,1);
    lcd.print("|");
    delay(150);
    break;
    case 3:
    lcd.setCursor(7,1);
    for(int i = 0; i<=5;i++){
    lcd.print(">");
    delay(150);}
    break;
    case 4:
    lcd.setCursor(13,1);
    lcd.print("<");
    delay(150);
    lcd.setCursor(12,1);
    lcd.print("<");
    delay(150);
    lcd.setCursor(11,1);
    lcd.print("<");
    delay(150);
    lcd.setCursor(10,1);
    lcd.print("<");
    delay(150);
    lcd.setCursor(9,1);
    lcd.print("<");
    delay(150);
    lcd.setCursor(8,1);
    lcd.print("<");
    delay(150);
    lcd.setCursor(7,1);
    lcd.print("<");
    delay(150);
    break;
    case 5:
    lcd.setCursor(7,1);
    for(int i = 0; i<=5;i++){
    lcd.print(".");
    delay(150);}
    break;
    case 6:
    lcd.setCursor(7,1);
    lcd.print("Mas alto!");
    break;
    case 7:
    lcd.setCursor(7,1);
    lcd.print("Shhh...");
    break;
    case 8:
    lcd.setCursor(7,1);
    for(int i = 0; i<=5;i++){
    lcd.print("A");
    delay(150);}
    break;
  }
}

void clearLine(int line) {
  lcd.setCursor(0, line);
  
  for (int i = 0; i < 16; i++) {
    lcd.print(" ");
  }
  lcd.setCursor(0, line);
}

void reiniciarTiempo() {
  tiempoInicioCancion = millis();
}
